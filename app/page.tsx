'use client';

import { useState } from 'react';
import { Toaster, toast } from 'react-hot-toast';
import { motion, AnimatePresence } from 'framer-motion';

export default function SurveyKhatian() {


 const [division, setDivision] = useState ('');
  const [district, setDistrict] = useState('');
  const [upazila, setUpazila] = useState('');
  const [type, setType] = useState('');
  const [mouza, setMouza] = useState('');

  const divisions = ['‡¶Æ‡¶Ø‡¶º‡¶Æ‡¶®‡¶∏‡¶ø‡¶Ç‡¶π', '‡¶∏‡¶ø‡¶≤‡ßá‡¶ü', '‡¶∞‡¶Ç‡¶™‡ßÅ‡¶∞', '‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ', '‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ', '‡¶¢‡¶æ‡¶ï‡¶æ'];

  const districtData: { [key: string]: string[] } = {
    ‡¶Æ‡¶Ø‡¶º‡¶Æ‡¶®‡¶∏‡¶ø‡¶Ç‡¶π: ['‡¶Æ‡¶Ø‡¶º‡¶Æ‡¶®‡¶∏‡¶ø‡¶Ç‡¶π', '‡¶®‡ßá‡¶§‡ßç‡¶∞‡¶ï‡ßã‡¶®‡¶æ', '‡¶∂‡ßá‡¶∞‡¶™‡ßÅ‡¶∞'],
    ‡¶∏‡¶ø‡¶≤‡ßá‡¶ü: ['‡¶∏‡¶ø‡¶≤‡ßá‡¶ü', '‡¶Æ‡ßå‡¶≤‡¶≠‡ßÄ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞', '‡¶π‡¶¨‡¶ø‡¶ó‡¶û‡ßç‡¶ú'],
    ‡¶∞‡¶Ç‡¶™‡ßÅ‡¶∞: ['‡¶¶‡¶ø‡¶®‡¶æ‡¶ú‡¶™‡ßÅ‡¶∞', '‡¶†‡¶æ‡¶ï‡ßÅ‡¶∞‡¶ó‡¶æ‡¶Å‡¶ì', '‡¶ï‡ßÅ‡ßú‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ'],
    ‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ: ['‡¶∏‡¶ø‡¶∞‡¶æ‡¶ú‡¶ó‡¶û‡ßç‡¶ú', '‡¶®‡¶ì‡¶ó‡¶æ‡¶Å', '‡¶ö‡¶æ‡¶Å‡¶™‡¶æ‡¶á‡¶®‡¶¨‡¶æ‡¶¨‡¶ó‡¶û‡ßç‡¶ú'],
    ‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ: ['‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ', '‡¶Ø‡¶∂‡ßã‡¶∞', '‡¶¨‡¶æ‡¶ó‡ßá‡¶∞‡¶π‡¶æ‡¶ü'],
    ‡¶¢‡¶æ‡¶ï‡¶æ: ['‡¶¢‡¶æ‡¶ï‡¶æ', '‡¶ó‡¶æ‡¶ú‡ßÄ‡¶™‡ßÅ‡¶∞', '‡¶®‡¶æ‡¶∞‡¶æ‡ßü‡¶£‡¶ó‡¶û‡ßç‡¶ú'],
  };

  
  const upojelas = [
  '  ‡¶∏‡¶ø‡¶∞‡¶æ‡¶ú‡¶ó‡¶û‡ßç‡¶ú ‡¶∏‡¶¶‡¶∞ ',

  '‡¶ï‡¶æ‡¶Æ‡¶æ‡¶∞‡¶ñ‡¶®‡ßç‡¶¶ ',

' ‡¶∞‡¶æ‡¶Ø‡¶º‡¶ó‡¶û‡ßç‡¶ú ',

 ' ‡¶§‡¶æ‡¶∞‡¶æ‡¶∂ ',

 ' ‡¶∂‡¶æ‡¶π‡¶ú‡¶æ‡¶¶‡¶™‡ßÅ‡¶∞ ',

' ‡¶¨‡ßá‡¶≤‡¶ï‡ßÅ‡¶ö‡¶ø ',

' ‡¶ö‡ßå‡¶π‡¶æ‡¶≤‡ßÄ ',

 '‡¶ï‡¶æ‡¶ú‡ßÄ‡¶™‡ßÅ‡¶∞ ',

 '‡¶â‡¶≤‡ßç‡¶≤‡¶æ‡¶™‡¶æ‡¶°‡¶º‡¶æ ',

];



  const khotianDhoron = [
  ' ‡¶∏‡¶ø.‡¶è‡¶∏  ',

  '‡¶è‡¶∏.‡¶è ',

' ‡¶Ü‡¶∞ ‡¶è‡¶∏ ',

 '‡¶¨‡¶ø ‡¶Ü‡¶∞ ‡¶è‡¶∏ ',

 ' ‡¶®‡¶æ‡¶Æ‡¶ú‡¶æ‡¶∞‡ßÄ ‡¶ñ‡¶§‡¶ø‡ßü‡¶æ‡¶® ',


];



const districtData125: { [key: string]: string[] } = {
    ‡¶∏‡¶ø‡¶∞‡¶æ‡¶ú‡¶ó‡¶û‡ßç‡¶ú: ['‡¶Æ‡¶Ø‡¶º‡¶Æ‡¶®‡¶∏‡¶ø‡¶Ç‡¶π', '‡¶®‡ßá‡¶§‡ßç‡¶∞‡¶ï‡ßã‡¶®‡¶æ', '‡¶∂‡ßá‡¶∞‡¶™‡ßÅ‡¶∞'],
    ‡¶∏‡¶ø‡¶≤‡ßá‡¶ü: ['‡¶∏‡¶ø‡¶≤‡ßá‡¶ü', '‡¶Æ‡ßå‡¶≤‡¶≠‡ßÄ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞', '‡¶π‡¶¨‡¶ø‡¶ó‡¶û‡ßç‡¶ú'],
    ‡¶∞‡¶Ç‡¶™‡ßÅ‡¶∞: ['‡¶¶‡¶ø‡¶®‡¶æ‡¶ú‡¶™‡ßÅ‡¶∞', '‡¶†‡¶æ‡¶ï‡ßÅ‡¶∞‡¶ó‡¶æ‡¶Å‡¶ì', '‡¶ï‡ßÅ‡ßú‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ'],
    ‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ: ['‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ', '‡¶®‡¶ì‡¶ó‡¶æ‡¶Å', '‡¶ö‡¶æ‡¶Å‡¶™‡¶æ‡¶á‡¶®‡¶¨‡¶æ‡¶¨‡¶ó‡¶û‡ßç‡¶ú'],
    ‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ: ['‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ', '‡¶Ø‡¶∂‡ßã‡¶∞', '‡¶¨‡¶æ‡¶ó‡ßá‡¶∞‡¶π‡¶æ‡¶ü'],
    ‡¶¢‡¶æ‡¶ï‡¶æ: ['‡¶¢‡¶æ‡¶ï‡¶æ', '‡¶ó‡¶æ‡¶ú‡ßÄ‡¶™‡ßÅ‡¶∞', '‡¶®‡¶æ‡¶∞‡¶æ‡ßü‡¶£‡¶ó‡¶û‡ßç‡¶ú'],
  };



  const handleSubmit = () => {
    if (!division || !district || !upazila || !type || !mouza) {
      alert('‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶∏‡¶ï‡¶≤ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®!');
      return;
    }

    alert(`üîç ‡¶ñ‡ßã‡¶Å‡¶ú‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá: 
    ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó: ${division}
    ‡¶ú‡ßá‡¶≤‡¶æ: ${district}
    ‡¶â‡¶™‡¶ú‡ßá‡¶≤‡¶æ: ${upazila}
    ‡¶ß‡¶∞‡¶®: ${type}
    ‡¶Æ‡ßå‡¶ú‡¶æ: ${mouza}`);

  };


















  const [showLogin, setShowLogin] = useState(false);
  const [showRegister, setShowRegister] = useState(false);

  const handleSearch = () => {
    toast.success('‡¶Ö‡¶®‡ßÅ‡¶∏‡¶®‡ßç‡¶ß‡¶æ‡¶® ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶® ‡¶π‡ßü‡ßá‡¶õ‡ßá ‚úÖ');
  };

  return (
    <main className="min-h-screen bg-gradient-to-br from-gray-900 to-black text-white">
      <Toaster position="top-right" reverseOrder={false} />

      {/* Header */}
      <header className="bg-gray-950 shadow-md py-4">
        <div className="max-w-6xl mx-auto px-4 flex justify-between items-center">
          <h1 className="text-2xl font-bold text-green-400">üìë Survey Khatian</h1>
          <div className="space-x-4">
            <button onClick={() => setShowLogin(true)} className="bg-green-600 hover:bg-green-700 transition px-4 py-2 rounded text-white text-sm font-semibold">Login</button>
            <button onClick={() => setShowRegister(true)} className="bg-blue-600 hover:bg-blue-700 transition px-4 py-2 rounded text-white text-sm font-semibold">Register</button>
          </div>
        </div>
      </header>

      {/* Notice */}
      <section className="max-w-6xl mx-auto px-4 mt-4">
        <p className="bg-red-600 text-white px-4 py-2 rounded shadow">‚ö†Ô∏è ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ú‡¶Æ‡¶ø‡¶∞ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ø‡¶æ‡¶ö‡¶æ‡¶á ‡¶ï‡¶∞‡ßá ‡¶®‡¶ø‡¶¨‡¶®‡ßç‡¶ß‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®‡•§</p>
      </section>

      {/* Survey Form */}
      <section className="max-w-6xl mx-auto mt-8 px-4">
        <div className="bg-gray-800 shadow-md rounded-lg p-6">
          <h2 className="text-xl font-bold text-green-400 mb-6">‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡ßá ‡¶ñ‡¶§‡¶ø‡¶Ø‡¶º‡¶æ‡¶®‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø</h2>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">

             <select
                value={division}
                onChange={(e) => {
                  setDivision(e.target.value);
                  setDistrict('');
                }}
                className="bg-gray-900 border border-gray-600 text-white p-2 rounded"
              >
                <option value="">‡¶¨‡¶æ‡¶õ‡¶æ‡¶á ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                {divisions.map((div) => (
                  <option key={div} value={div}>
                    {div}
                  </option>
                ))}
              </select>

             {/* <select
            value={division}
            onChange={(e) => {
              setDivision(e.target.value)
              setDistrict('')
            }}
          className="bg-gray-900 border border-gray-600 text-white p-2 rounded"
          >

            <option value="">‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
            {divisions.map((div) => (
              <option key={div} value={div}>{div}</option>
            ))}
          </select> */}



           






             <select
                value={district}
                onChange={(e) => setDistrict(e.target.value)}
                disabled={!division}
               className="bg-gray-900 border border-gray-600 text-white p-2 rounded"
              >
                
             <option>‡¶ú‡ßá‡¶≤‡¶æ</option>

                {districtData[division]?.map((d) => (
                  <option key={d} value={d}>
                    {d}
                  </option>
                ))}
              </select>




           
        
      <select
                value={division}
                onChange={(e) => {
                  setDivision(e.target.value);
                  setDistrict('');
                }}
                className="bg-gray-900 border border-gray-600 text-white p-2 rounded"
              >
                <option value="">‡¶•‡¶æ‡¶®‡¶æ</option>
                {upojelas.map((div) => (
                  <option key={div} value={div}>
                    {div}
                  </option>
                ))}
              </select>




                <select
                value={division}
                onChange={(e) => {
                  setDivision(e.target.value);
                  setDistrict('');
                }}
                className="bg-gray-900 border border-gray-600 text-white p-2 rounded"
              >
                <option value="">‡¶ñ‡¶§‡¶ø‡ßü‡¶æ‡¶® ‡¶ß‡¶∞‡¶®</option>
                {khotianDhoron.map((div) => (
                  <option key={div} value={div}>
                    {div}
                  </option>
                ))}
              </select>

 


            <select className="bg-gray-900 border border-gray-600 text-white p-2 rounded"> <option>‡¶Æ‡ßå‡¶ú‡¶æ</option> </select>
          </div>

          <button
            onClick={handleSearch}
            className="mt-6 w-full md:w-auto bg-green-600 hover:bg-green-700 transition px-6 py-2 rounded shadow text-white font-semibold">
            üîç ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶®‡ßç‡¶ß‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®
          </button>
        </div>
      </section>

      {/* Scroll to top button */}
      <button onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })} className="fixed bottom-6 right-6 bg-green-600 hover:bg-green-700 p-3 rounded-full text-white shadow-lg">
        ‚¨ÜÔ∏è
      </button>

      {/* Login Modal */}
      <AnimatePresence>
        {showLogin && (
          <motion.div
            className="fixed inset-0 bg-black/80 flex items-center justify-center z-50"
            initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>
            <div className="bg-gray-900 rounded-lg shadow-lg p-8 w-full max-w-md">
              <h3 className="text-xl font-bold mb-4">üîê Login</h3>
              <input type="email" placeholder="Email" className="w-full mb-3 p-2 rounded bg-gray-800 text-white" />
              <input type="password" placeholder="Password" className="w-full mb-4 p-2 rounded bg-gray-800 text-white" />
              <div className="flex justify-end space-x-2">
                <button onClick={() => setShowLogin(false)} className="text-gray-400 hover:text-white">Cancel</button>
                <button onClick={() => { toast.success('Login Success ‚úÖ'); setShowLogin(false); }} className="bg-green-600 px-4 py-2 rounded">Login</button>
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* Register Modal */}
      <AnimatePresence>
        {showRegister && (
          <motion.div
            className="fixed inset-0 bg-black/80 flex items-center justify-center z-50"
            initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>
            <div className="bg-gray-900 rounded-lg shadow-lg p-8 w-full max-w-md">
              <h3 className="text-xl font-bold mb-4">üìù Register</h3>
              <input type="text" placeholder="Name" className="w-full mb-3 p-2 rounded bg-gray-800 text-white" />
              <input type="email" placeholder="Email" className="w-full mb-3 p-2 rounded bg-gray-800 text-white" />
              <input type="password" placeholder="Password" className="w-full mb-4 p-2 rounded bg-gray-800 text-white" />
              <div className="flex justify-end space-x-2">
                <button onClick={() => setShowRegister(false)} className="text-gray-400 hover:text-white">Cancel</button>
                <button onClick={() => { toast.success('Registration Complete üéâ'); setShowRegister(false); }} className="bg-blue-600 px-4 py-2 rounded">Register</button>
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </main>
  );
}









// 'use client';

// import { useState } from 'react';
// import { ChevronDown, Search } from 'lucide-react';


// export default function SurveyKhatianPage() {
//   const [division, setDivision] = useState ('');
//   const [district, setDistrict] = useState('');
//   const [upazila, setUpazila] = useState('');
//   const [type, setType] = useState('');
//   const [mouza, setMouza] = useState('');

//   const divisions = ['‡¶Æ‡¶Ø‡¶º‡¶Æ‡¶®‡¶∏‡¶ø‡¶Ç‡¶π', '‡¶∏‡¶ø‡¶≤‡ßá‡¶ü', '‡¶∞‡¶Ç‡¶™‡ßÅ‡¶∞', '‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ', '‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ', '‡¶¢‡¶æ‡¶ï‡¶æ'];

//   const districtData: { [key: string]: string[] } = {
//     ‡¶Æ‡¶Ø‡¶º‡¶Æ‡¶®‡¶∏‡¶ø‡¶Ç‡¶π: ['‡¶Æ‡¶Ø‡¶º‡¶Æ‡¶®‡¶∏‡¶ø‡¶Ç‡¶π', '‡¶®‡ßá‡¶§‡ßç‡¶∞‡¶ï‡ßã‡¶®‡¶æ', '‡¶∂‡ßá‡¶∞‡¶™‡ßÅ‡¶∞'],
//     ‡¶∏‡¶ø‡¶≤‡ßá‡¶ü: ['‡¶∏‡¶ø‡¶≤‡ßá‡¶ü', '‡¶Æ‡ßå‡¶≤‡¶≠‡ßÄ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞', '‡¶π‡¶¨‡¶ø‡¶ó‡¶û‡ßç‡¶ú'],
//     ‡¶∞‡¶Ç‡¶™‡ßÅ‡¶∞: ['‡¶¶‡¶ø‡¶®‡¶æ‡¶ú‡¶™‡ßÅ‡¶∞', '‡¶†‡¶æ‡¶ï‡ßÅ‡¶∞‡¶ó‡¶æ‡¶Å‡¶ì', '‡¶ï‡ßÅ‡ßú‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ'],
//     ‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ: ['‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ', '‡¶®‡¶ì‡¶ó‡¶æ‡¶Å', '‡¶ö‡¶æ‡¶Å‡¶™‡¶æ‡¶á‡¶®‡¶¨‡¶æ‡¶¨‡¶ó‡¶û‡ßç‡¶ú'],
//     ‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ: ['‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ', '‡¶Ø‡¶∂‡ßã‡¶∞', '‡¶¨‡¶æ‡¶ó‡ßá‡¶∞‡¶π‡¶æ‡¶ü'],
//     ‡¶¢‡¶æ‡¶ï‡¶æ: ['‡¶¢‡¶æ‡¶ï‡¶æ', '‡¶ó‡¶æ‡¶ú‡ßÄ‡¶™‡ßÅ‡¶∞', '‡¶®‡¶æ‡¶∞‡¶æ‡ßü‡¶£‡¶ó‡¶û‡ßç‡¶ú'],
//   };

//   const handleSubmit = () => {
//     if (!division || !district || !upazila || !type || !mouza) {
//       alert('‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶∏‡¶ï‡¶≤ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®!');
//       return;
//     }

//     alert(`üîç ‡¶ñ‡ßã‡¶Å‡¶ú‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá: 
//     ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó: ${division}
//     ‡¶ú‡ßá‡¶≤‡¶æ: ${district}
//     ‡¶â‡¶™‡¶ú‡ßá‡¶≤‡¶æ: ${upazila}
//     ‡¶ß‡¶∞‡¶®: ${type}
//     ‡¶Æ‡ßå‡¶ú‡¶æ: ${mouza}`);
//   };

//   return (
//     <div className="min-h-screen bg-gray-100">
//       {/* Header */}
//       <header className="bg-green-800 text-white py-4 px-6 shadow">
//         <div className="max-w-7xl mx-auto flex justify-between items-center">
//           <h1 className="text-xl font-bold">‡¶≠‡ßÇ‡¶Æ‡¶ø ‡¶∏‡ßá‡¶¨‡¶æ ‡¶™‡ßã‡¶∞‡ßç‡¶ü‡¶æ‡¶≤</h1>
//           <button
//             onClick={() => window.location.href = "/login"}
//             className="bg-white text-green-800 px-4 py-1 rounded hover:bg-gray-200"
//           >
//             ‡¶≤‡¶ó‡¶á‡¶®
//           </button>
//         </div>
//       </header>

//       {/* Service Tabs */}
//       <section className="max-w-7xl mx-auto px-4 py-6 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4">
//         {['‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡ßá ‡¶ñ‡¶§‡¶ø‡ßü‡¶æ‡¶®', '‡¶®‡¶æ‡¶Æ‡¶ú‡¶æ‡¶∞‡¶ø ‡¶ñ‡¶§‡¶ø‡ßü‡¶æ‡¶®', '‡¶Æ‡ßå‡¶ú‡¶æ ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶™', '‡¶Ü‡¶¨‡ßá‡¶¶‡¶®‡ßá‡¶∞ ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶®', '‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂‡¶ø‡¶ï‡¶æ'].map((item, idx) => (
//           <div
//             key={idx}
//             className="bg-white border-2 border-green-600 text-center py-6 rounded-lg cursor-pointer hover:bg-green-600 hover:text-white transition"
//           >
//             <div className="text-sm font-semibold">{item}</div>
//           </div>
//         ))}
//       </section>

//       {/* Notice */}
//       <p className="text-center text-red-600 font-semibold text-sm px-4">
//         ‡¶è‡¶ñ‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶ñ‡¶§‡¶ø‡¶Ø‡¶º‡¶æ‡¶®‡ßá‡¶∞ ‡¶ï‡¶™‡¶ø ‡¶Ü‡¶∞ ‡¶ï‡ßã‡¶° ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶®/‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶°‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø ‡¶ï‡¶™‡¶ø ‡ßß‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶®‡¶ø‡¶Æ‡¶Ø‡¶º‡ßá ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá‡•§ ‡¶è‡¶õ‡¶æ‡¶°‡¶º‡¶æ‡¶ì ‡¶∏‡¶æ‡¶∞‡ßç‡¶ü‡¶ø‡¶´‡¶æ‡¶á‡¶°/‡¶∏‡¶§‡ßç‡¶Ø‡¶æ‡¶Ø‡¶º‡¶ø‡¶§ ‡¶ñ‡¶§‡¶ø‡¶Ø‡¶º‡¶æ‡¶® ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø ‡¶Ö‡¶´‡¶ø‡¶∏‡ßá ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá‡•§
//       </p>

//       {/* Form */}
//     <section className="max-w-6xl mx-auto mt-8 px-4">
//   <div className="bg-gray-900 shadow-md rounded-lg p-6">
//     <h2 className="text-xl font-bold text-green-400 mb-6">üìÑ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡ßá ‡¶ñ‡¶§‡¶ø‡¶Ø‡¶º‡¶æ‡¶®‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø</h2>

//     <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
//             {/* ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó */}
//             <div>
//               <label className="block mb-1 font-semibold">‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó</label>
//               <select
//                 value={division}
//                 onChange={(e) => {
//                   setDivision(e.target.value);
//                   setDistrict('');
//                 }}
//                 className="w-full bg-gray-900 border border-gray-300 rounded px-3 py-2"
//               >
//                 <option value="">‡¶¨‡¶æ‡¶õ‡¶æ‡¶á ‡¶ï‡¶∞‡ßÅ‡¶®</option>
//                 {divisions.map((div) => (
//                   <option key={div} value={div}>
//                     {div}
//                   </option>
//                 ))}
//               </select>
//             </div>

//             {/* ‡¶ú‡ßá‡¶≤‡¶æ */}
//             <div>
//               <label className="block  mb-1 font-semibold">‡¶ú‡ßá‡¶≤‡¶æ</label>
//               <select
//                 value={district}
//                 onChange={(e) => setDistrict(e.target.value)}
//                 disabled={!division}
//                 className="w-full bg-gray-900 border border-gray-300 rounded px-3 py-2 "
//               >
//                 <option value="">‡¶ú‡ßá‡¶≤‡¶æ ‡¶¨‡¶æ‡¶õ‡¶æ‡¶á ‡¶ï‡¶∞‡ßÅ‡¶®</option>
//                 {districtData[division]?.map((d) => (
//                   <option key={d} value={d}>
//                     {d}
//                   </option>
//                 ))}
//               </select>
//             </div>

//             {/* ‡¶â‡¶™‡¶ú‡ßá‡¶≤‡¶æ */}
//             <div>
//               <label className="block mb-1 font-semibold">‡¶â‡¶™‡¶ú‡ßá‡¶≤‡¶æ/‡¶•‡¶æ‡¶®‡¶æ</label>
//               <input
//                 type="text"
//                 value={upazila}
//                 onChange={(e) => setUpazila(e.target.value)}
//                 className="w-full border border-gray-300 rounded px-3 py-2"
//                 placeholder="‡¶â‡¶™‡¶ú‡ßá‡¶≤‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®"
//               />
//             </div>

//             {/* ‡¶ñ‡¶§‡¶ø‡¶Ø‡¶º‡¶æ‡¶®‡ßá‡¶∞ ‡¶ß‡¶∞‡¶® */}
//             <div>
//               <label className="block mb-1 font-semibold">‡¶ñ‡¶§‡¶ø‡¶Ø‡¶º‡¶æ‡¶®‡ßá‡¶∞ ‡¶ß‡¶∞‡¶®</label>
//               <select
//                 value={type}
//                 onChange={(e) => setType(e.target.value)}
//                 className="w-full border border-gray-300 rounded px-3 py-2"
//               >
//                 <option value="">‡¶ß‡¶∞‡¶® ‡¶¨‡¶æ‡¶õ‡¶æ‡¶á ‡¶ï‡¶∞‡ßÅ‡¶®</option>
//                 <option value="cs">CS</option>
//                 <option value="sa">SA</option>
//                 <option value="rs">RS</option>
//               </select>
//             </div>

//             {/* ‡¶Æ‡ßå‡¶ú‡¶æ */}
//             <div>
//               <label className="block mb-1 font-semibold">‡¶Æ‡ßå‡¶ú‡¶æ</label>
//               <input
//                 type="text"
//                 value={mouza}
//                 onChange={(e) => setMouza(e.target.value)}
//                 className="w-full border border-gray-300 rounded px-3 py-2"
//                 placeholder="‡¶Æ‡ßå‡¶ú‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®"
//               />
//             </div>

//             {/* ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßÅ‡¶® */}
//             <div className="flex items-end">
//               <button
//                 onClick={handleSubmit}
//                 className="bg-green-600 text-white w-full py-2 rounded hover:bg-green-700 flex items-center justify-center"
//               >
//                 <Search className="w-4 h-4 mr-2" /> ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßÅ‡¶®
//               </button>
//             </div>
//           </div>
//         </div>
//       </section>

//       {/* Scroll Top Button */}
//       <button
//         onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}
//         className="fixed bottom-6 right-6 bg-green-600 hover:bg-green-700 text-white p-3 rounded-full shadow-lg"
//       >
//         ‚Üë
//       </button>
//     </div>
//   );
// }
